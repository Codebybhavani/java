import java.util.*;

class CosmeticProduct {
    private String name;
    private String brand;
    private double price;
    private List<String> ingredients;

    public CosmeticProduct(String name, String brand, double price, List<String> ingredients) {
        this.name = name;
        this.brand = brand;
        this.price = price;
        this.ingredients = ingredients;
    }

    public String getName() {
        return name;
    }

    public String getBrand() {
        return brand;
    }

    public double getPrice() {
        return price;
    }

    public List<String> getIngredients() {
        return ingredients;
    }

    public boolean isGoodForSkin(List<String> poisonList) {
        for (String ingredient : ingredients) {
            if (poisonList.contains(ingredient.toLowerCase())) {
                return false;
            }
        }
        return true;
    }

    public String getBadIngredients(List<String> poisonList) {
        List<String> badIngredients = new ArrayList<>();
        for (String ingredient : ingredients) {
            if (poisonList.contains(ingredient.toLowerCase())) {
                badIngredients.add(ingredient);
            }
        }
        return badIngredients.isEmpty() ? "No harmful ingredients found." : String.join(", ", badIngredients);
    }

    @Override
    public String toString() {
        return "Product Name: " + name + "\n" +
               "Brand: " + brand + "\n" +
               "Price: $" + price + "\n" +
               "Ingredients: " + String.join(", ", ingredients) + "\n";
    }
}

public class CosmeticProductAnalysis {
    private static List<CosmeticProduct> products = new ArrayList<>();
    private static List<String> poisonList = Arrays.asList("paraben", "sulfate", "phthalate", "formaldehyde");

    public static void addProduct(String name, String brand, double price, List<String> ingredients) {
        products.add(new CosmeticProduct(name, brand, price, ingredients));
    }

    public static void displayProducts() {
        if (products.isEmpty()) {
            System.out.println("No products available.");
            return;
        }
        for (CosmeticProduct product : products) {
            System.out.println(product);
            System.out.println("Good for skin: " + (product.isGoodForSkin(poisonList) ? "Yes" : "No"));
            System.out.println("----------------------");
        }
    }

    public static void findProductsByPriceRange(double minPrice, double maxPrice) {
        System.out.println("Products in price range $" + minPrice + " - $" + maxPrice + ":");
        for (CosmeticProduct product : products) {
            if (product.getPrice() >= minPrice && product.getPrice() <= maxPrice) {
                System.out.println(product);
                System.out.println("Good for skin: " + (product.isGoodForSkin(poisonList) ? "Yes" : "No"));
                System.out.println("----------------------");
            }
        }
    }

    public static void findProductsByIngredient(String ingredient) {
        System.out.println("Products containing ingredient: " + ingredient);
        for (CosmeticProduct product : products) {
            if (product.getIngredients().contains(ingredient)) {
                System.out.println(product);
                System.out.println("Good for skin: " + (product.isGoodForSkin(poisonList) ? "Yes" : "No"));
                System.out.println("----------------------");
            }
        }
    }

    public static void findProductByName(String name) {
        boolean found = false;
        for (CosmeticProduct product : products) {
            if (product.getName().equalsIgnoreCase(name)) {
                found = true;
                System.out.println(product);
                if (product.isGoodForSkin(poisonList)) {
                    System.out.println("Good for skin: Yes");
                } else {
                    System.out.println("Good for skin: No");
                    System.out.println("Harmful ingredients found: " + product.getBadIngredients(poisonList));
                }
                System.out.println("----------------------");
                break;
            }
        }
        if (!found) {
            System.out.println("Product not found.");
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nCosmetic Product Analysis Menu:");
            System.out.println("1. Add Product");
            System.out.println("2. Display All Products");
            System.out.println("3. Find Products by Price Range");
            System.out.println("4. Find Products by Ingredient");
            System.out.println("5. Find Product by Name");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter product name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter brand: ");
                    String brand = scanner.nextLine();
                    System.out.print("Enter price: ");
                    double price = scanner.nextDouble();
                    scanner.nextLine(); // Consume newline
                    System.out.print("Enter ingredients (comma-separated): ");
                    String[] ingredientsArray = scanner.nextLine().split(",");
                    List<String> ingredients = new ArrayList<>();
                    for (String ingredient : ingredientsArray) {
                        ingredients.add(ingredient.trim().toLowerCase());
                    }
                    addProduct(name, brand, price, ingredients);
                    break;

                case 2:
                    displayProducts();
                    break;

                case 3:
                    System.out.print("Enter minimum price: ");
                    double minPrice = scanner.nextDouble();
                    System.out.print("Enter maximum price: ");
                    double maxPrice = scanner.nextDouble();
                    findProductsByPriceRange(minPrice, maxPrice);
                    break;

                case 4:
                    System.out.print("Enter ingredient to search for: ");
                    String ingredient = scanner.nextLine().toLowerCase();
                    findProductsByIngredient(ingredient);
                    break;

                case 5:
                    System.out.print("Enter the product name to search: ");
                    String searchName = scanner.nextLine();
                    findProductByName(searchName);
                    break;

                case 6:
                    System.out.println("Exiting application. Goodbye!");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
